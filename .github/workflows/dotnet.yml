name: 'Action'

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore --no-cache

      - name: Build
        run: dotnet build --no-restore --configuration Debug

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Restore Test Dependencies
        run: dotnet restore /p:RestorePackagesConfig=true

      - name: Log in to Docker hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin


  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: staging
    steps:
      - uses: actions/checkout@v3
      
      - name: Remove Existing Container
        run: |
          docker stop monitoramento-ambiental-contain-staging || true
          docker rm monitoramento-ambiental-contain-staging || true

      - name: Build Docker Image (Staging)
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/monitoramento-ambiental:latest .
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/monitoramento-ambiental:latest ${{ secrets.DOCKER_HUB_USERNAME }}/monitoramento-ambiental:staging
      - name: Push Docker Image (Staging)
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/monitoramento-ambiental:staging  
      - name: Deploy to Staging
        run: |
          docker run -d -p 8080:8080 --name monitoramento-ambiental-contain-staging ${{ secrets.DOCKER_HUB_USERNAME }}/monitoramento-ambiental:staging

      - name: Set Staging URL
        id: deploy-staging
        run: echo "url=https://staging.example.com" >> $GITHUB_ENV

  production:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker Image (Production)
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/monitoramento-ambiental:prod .
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/monitoramento-ambiental:latest ${{ secrets.DOCKER_HUB_USERNAME }}/monitoramento-ambiental:prod

      - name: Push Docker Image (Production)
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/monitoramento-ambiental:prod

      - name: Deploy to Production
        run: |
          docker run -d -p 8080:8080 --name monitoramento-ambiental-contain-production ${{ secrets.DOCKER_HUB_USERNAME }}/monitoramento-ambiental:prod

      - name: Set Production URL
        id: deploy-production
        run: echo "url=https://production.example.com" >> $GITHUB_ENV